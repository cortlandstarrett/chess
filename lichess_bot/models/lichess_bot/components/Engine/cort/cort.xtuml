// BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

within lichess_bot::components::Engine is

    package cort is
        @dialect("oal");
        @function_num(4);
        function simple_max_advance(legal_moves: in sequence of string, color: in Color) return string is
            @noparse
            legal_moves = param.legal_moves;
            
            // Loop through legal moves.  Find the move that maximises file increase.
            i = 0; max_index = 0; max_advance = 0; advance = 0;
            while ( i < legal_moves.length )
                rank_start = STRING::atoi(s:STRING::substr(s:legal_moves[i], begin:1, end:2)) - 1;
                rank_end = STRING::atoi(s:STRING::substr(s:legal_moves[i], begin:3, end:4)) - 1;
                if ( param.color == Color::WHITE ) then
                    advance = rank_end - rank_start;
                else
                    advance = rank_start - rank_end;
                end if;
                if ( advance > max_advance ) then
                    max_advance = advance;
                    max_index = i;
                end if;
                i = i + 1;
            end while;
            
            move = legal_moves[max_index];
            if ( max_advance == 0 ) then
                // select a random legal move
                i = TIM::current_clock() % legal_moves.length;
                move = legal_moves[i];
            end if;
            
            return move;
            @endnoparse
        end function;

    end package;

end;
